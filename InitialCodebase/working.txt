import java.io.*;
import java.util.*;



public class DelivA {

	private File inputFile;
	private File outputFile;
	private PrintWriter output;
	private Graph graph;

	//Constructor - DO NOT MODIFY
	public DelivA(File in, Graph gr) {
		inputFile = in;
		graph = gr;

		// Set up for writing to a file
		try {
			// Use input file name to create output file in the same location
			String inputFileName = inputFile.toString();
			String outputFileName = inputFileName.substring(0, inputFileName.length() - 4).concat("_out.txt");
			outputFile = new File(outputFileName);

			// A Printwriter is an object that can write to a file
			output = new PrintWriter(outputFile);
		} catch (Exception x) {
			System.err.format("Exception: %s%n", x);
			System.exit(0);
		}
		
		// Calls the method that will do the work of deliverable A
		runDelivA();

		output.flush();
	}

	//*********************************************************************************
	//               This is where your work starts
	private void runDelivA() {
		//Delete these lines when you add functionality
		System.out.println("DelivA:  To be implemented");//Prints to console
		output.println("DelivA:  To be implemented");//Prints to file

try {
	Scanner scanner = new Scanner(inputFile);
		
	String[] Nodes = scanner.nextLine().replace("~", "").replace("val", "").trim().split(" +");
	System.out.println();
		
		int index = 0;
		int[] inDegreeArray = new int[Nodes.length];
		int[] outDegreeArray = new int[Nodes.length];
		while (scanner.hasNextLine()) {

			String line = scanner.nextLine();
			String[] splitString = line.split(" +");

			for (int i = 2; i < splitString.length; i++) {
				
				if (!splitString[i].equals("~")) {
					inDegreeArray[i - 2]++;
				}

				if (!splitString[i].equals("~")) {
					outDegreeArray[index] = outDegreeArray[index] + 1;
				}
			}

			index++;
		}
		

		System.out.println("Indegree:");

		for (int i = 0; i < Nodes.length; i++) {
			System.out.println("Node " + Nodes[i] + " has indegree " + inDegreeArray[i]);
		}
		System.out.println("Outdegree:");
		for (int i = 0; i < Nodes.length; i++) {
			System.out.println("Node " + Nodes[i] + " has outdegree " + outDegreeArray[i]);
		}
        scanner.close();
	} catch (FileNotFoundException e) {
		System.err.format("FileNotFoundException: %s%n", e);
	}
	}

}



// try {
// 	Scanner scanner = new Scanner(inputFile);
		
// 	String[] Nodes = scanner.nextLine().replace("~", "").replace("val", "").trim().split(" +");
// 	System.out.println();
		
// 		int index = 0;
// 		int[] inDegreeArray = new int[Nodes.length];
// 		int[] outDegreeArray = new int[Nodes.length];
 
		

// 		while (scanner.hasNextLine()) {

// 			String line = scanner.nextLine();
// 			String[] splitString = line.split(" +");

// 			for (int i = 2; i < splitString.length; i++) {
				
// 				if (!splitString[i].equals("~")) {
// 					inDegreeArray[i - 2]++;
// 				}

// 				if (!splitString[i].equals("~")) {
// 					outDegreeArray[index] = outDegreeArray[index] + 1;
// 				}
// 			}

// 			index++;
// 		}
// 		// use foreach loop for graph.getNodeList() and get the node and set the indegree and outdegree

		


// 		System.out.println("Indegree:");

// 		for (int i = 0; i < Nodes.length; i++) {
// 			System.out.println("Node " + Nodes[i] + " has indegree " + inDegreeArray[i]);
// 		}
// 		System.out.println("Outdegree:");
// 		for (int i = 0; i < Nodes.length; i++) {
// 			System.out.println("Node " + Nodes[i] + " has outdegree " + outDegreeArray[i]);
// 		}
//         scanner.close();
// 	} catch (FileNotFoundException e) {
// 		System.err.format("FileNotFoundException: %s%n", e);
// 	}
